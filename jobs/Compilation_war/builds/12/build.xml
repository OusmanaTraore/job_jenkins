<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.38">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>jenkins</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.16">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.80">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>23</queueId>
  <timestamp>1585423423300</timestamp>
  <startTime>1585423423307</startTime>
  <result>FAILURE</result>
  <duration>21138</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>node{
    
    def registryProject=&apos;registry.gitlab.com/youssouy/docker-gitlab&apos;
    def IMAGE= &quot;${registryProject}:compil-${env.BUILD_ID}&quot;
    
    stage(&apos;Build - Clone&apos;){
        git &apos;https://github.com/OusmanaTraore/war-build-docker.git&apos;
    }
    stage (&apos;Build - Maven&apos;){
        sh &apos;mvn package&apos;
    }
    
    def img = stage (&apos;Docker - Build&apos;){
        docker.build(&quot;$IMAGE&quot;, &apos;.&apos;)
    }
    stage (&apos;Build -Test&apos;){
      img.withRun(&quot;--name run-$BUILD_ID -p 81:80&quot;) { 
        sh &apos;docker ps&apos;
        sh &apos;netstat -ntaup&apos;
        sh &apos;sleep 5s&apos;
        sh &apos;curl 192.168.56.1:81&apos;
        sh &apos;docker ps&apos;
        }
    }
    stage (&apos;Push&apos;) {
        docker.withRegistry(&apos;https://registry.gitlab.com&apos;, &apos;reg1&apos;) {
            img.push &apos;latest&apos;
            img.push()
        } 
    }
    stage (&apos;Deploy -Clone&apos;){
        git &apos;https://github.com/OusmanaTraore/jenkins-ansible-docker-1.git&apos;
    }
    stage (&apos;Deploy - End&apos;){
        ansiblePlaybook(
            playbook: &quot;playbook.yml&quot;,
            inventory: &quot;inventory.yml&quot;,
//            inventory: &quot;${HOST},&quot;,
            extras: &quot;--extra-vars &apos;image=$IMAGE&apos;&quot;,
            colorized: true,
            become: true 
        
            )
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>168928362</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>364752333</long>
      </entry>
      <entry>
        <string>run</string>
        <long>442102554</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>396117638</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>49987173</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>12</iota>
    <head>1:12</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>